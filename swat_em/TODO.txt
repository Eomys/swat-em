
TODO

New

- Neuer Wizzard: DoZa Wicklung erstellen. Damit auch unterschiedliche Windungszahlen für Spulenseiten einführen.
- 
- Funktion um Windungszahlen global für alle Spulenseiten setzt
- Manuellen Wicklungseditor erweitern, sodass für jede Spulenseite die Windungszahl gesetzt werden kann
- Fenster, um die Nutfläche mit der Leiterverteilung zu plotten (Nutfüllfaktor, etc.)
- 
- add a info widget with detailled informations about the winding, with mechanical winding factor for example
- "create report": Fenster mit Auswahl anzeigen
	- Zeige slot voltage phasor plots für alle Ordnungszahlen
- Berechne doppelt verkettete Streuung
- Fenster mit zusätzlichen Faktoren: Nutschlitzfaktor, Polbedeckungsfaktor, Schrägungsfaktor
    - plotte alle drei Faktoren, wenn angewählt
    - plotte Summe aller Faktoren
    - gebe Tabelle aus
- Exporter für Manatee
- Plot des Strombelags unter Eingabe von Dstator und s Nutschlitzbreite, Stromamplitude und Windungszahl (hier auch Strangzahl m=6 usw. prüfen, da Phasenverschiebung 360/(2m) wenn m geradzahlig ist); Hier auch einen Exporter für die Ordnungszahlen



BUGFIX
- "def wdg_get_periodic()": Sinnvollerweise nur die positiven oder negativen Spulenseiten auswerten! Hinweis: für beliebige Wicklungen, deren negative Spulenseiten anders definiert sind als die positiven. Kann man das abfangen??
- Ordnungszahlen nach Binder, S.124:   1 + 2*m*g  mit g = 0, +-1, +-2, ...


 MMF ist für mehrsträngige Wicklungen zu prüfen?







Done
- aks for saving before loading a file
- config should not be saved with the datamodel. It should not be part of the datamodel -> switch to the main-window
- save as zip compressed json
- update test cases because of new winding generator
- plot: Add MMF-plot
- generate icons for MMF, winding-factor
- "about" window should show the version number
- add a window to modify the configuration
- window "show winding layout" should be used for edit the winding manually. This window should be triggered, when clicking on "edit winding layout" and when clicking of the "winding layout" plot
- New winding generator which creates a list of Q and p and with all possible windings -> wizzard
    -> Label with shows what the colors means in the table: q<1, etc.
- Radionbuttons bei "plot winding factor" für elektrischen oder mechanischen Wicklungsfaktor
- Combobox bei "plot slot voltage vector" für die elektrische Ordnungszahl für den Spannungsstern
- main.py
	- importiert aber nicht verwendet: from PyQt5.QtCore import QFile, QTextStream
	- importiert aber nicht verwendet: pdb
- analyse.py
	- pdb
- datamodel.py
	- pdb, numpy
- wdggenerator.py
	- collections/deque
- plots.py
	- time, pdb, matplotlib as mpl, matplotlib.figure, matplotlib.patches
- dialog_genwdg.py
	- QMainWindow, Qt
- dialog_winding_loayout.py
	- numpy
- in der Funktion winding_from_star_of_slot...() wird zweimal 'error': error ins dictionary geschrieben -> rausnehmen
- "plot slot voltage vector" umbenennen auf "slot voltage phasors"
- Zusätzlicher Schalter in "generate windings per table" für "force tooth coil winding"
- focus bei dialog "edit winding layout" auf "OK" und nicht auf "Cancel"
- winding_from_star_of_slot() liefert auch "wstep" zurück. Damit kann für "generate windings per table" ermittelt werden, ob es eine Zahnspule ist.
- Tabelle bei "plot slot voltage": Phasenlage der einzelnen Zeiger (Ausgabe muss sich ändern, jenachdem welche Ordnungszahl ausgewählt ist
- winding wizzard: 21 slots and 10 poles result in q<1 but this is not a tooth-coil winding!!!!!
    -> handle this!
- "symmetric" only looks for the angle of the phasors and not for the amplitude or the winding factor
- "wdg_is_symmetric()" soll auch auf gleiche Amplitude und nicht nur auf phase prüfen. Das kommt bei m=2 häufig vor!
- Schauen, ob bei m = geradzahlig abgefangen ist, dass phasenverschiebung 360°/(2*m) gilt (nicht nur bei m=2). für ungeradzahlig gilt 360°/m
- config.py
	- Neue Routinen um die Config aus dem home-Verzeichnis zu lesen, initial rein zu schreiben
	- Wenn Optionen gelesen werden, dann muss geprüft werden, ob die Standardconfig zusätzliche (neue) Schlüsselwörter enthält. Dann sollen diesen in die Config übernommen werden
	- neue Funktion get_config(default = True) # default zeigt an, ob Standardconfig oder user-eigene config verwendet werden soll
- config.py: Fenster erstellen, um die Optionen zu bearbeiten und zu resetten. Anschließend sollte die Wicklung erneut analysiert werden und die Ausgabe aktualisiert werden




